# NAME

DBIx::Yakinny -

# SYNOPSIS

    package MyApp::DB::Row::User;
    use base qw/DBIx::Yakinny::Row/;

    package main;
    use DBIx::Yakinny::Schema;
    use DBIx::Yakinny;
    use DBI;

    my $schema = DBIx::Yakinny::Schema->new();
    $schema->register_table(
        class   => 'MyApp::DB::Row::User',
        table   => 'user',
        columns => [qw/user_id name email/],
        primary_key      => 'user_id',
    );

    my $dbh = DBI->connect(...);
    my $db = DBIx::Yakinny->new(
        dbh    => $dbh,
        schema => $schema,
    );
    $db->dbh; # => #dbh
    my $user = $db->insert('user' => {name => 'john', email => 'john@exapmle.com'});
    say $user->name; # => john
    $user->name('mark');
    $user->update;
    $user->delete();

    my @users = $db->search_by_sql('user' => q{SELECT * FROM user WHERE name LIKE 'dai%'});

    my $user = $db->single('user' => {user_id => 3});
    my $iter = $db->search('user' => {user_id => 3});
    my @users = $db->search('user' => {user_id => 3});

# DESCRIPTION

DBIx::Yakinny is yet another O/R mapper based on Active Record strategy.

# FAQ

- How do you use trigger like Class::DBI?

You should use trigger on RDBMS layer. It is reliable.

And so, if you *really* want it, you can override the methods on DBIx::Yakinny.

- How do you use inflate/deflate?

This module does not support it. But, you can use it by method modifier with [Class::Method::Modifiers](http://search.cpan.org/perldoc?Class::Method::Modifiers).

- How do you use tracer like DBIx::Skinny::Profiler::Trace?

You can use tracer by DBI. And you can use the advanced tracer like this article: <http://d.hatena.ne.jp/tokuhirom/20101201/1291196584>.

- How do you use relationships?

It is not supported in core. You can write a plugin to do it.

- How do you handle reconnect?

use [DBIx::Connector](http://search.cpan.org/perldoc?DBIx::Connector).

- How do you use nested transaction?

use [DBIx::Connector](http://search.cpan.org/perldoc?DBIx::Connector).

- How do you use on_connect_do like DBIC?

use $dbh->{Callbacks}->{connected}.

- How do you use display the profiling result like [DBIx::Skinny::Profiler](http://search.cpan.org/perldoc?DBIx::Skinny::Profiler)?

use [Devel::KYTProf](http://search.cpan.org/perldoc?Devel::KYTProf).

- How do you display pretty error message?

use DBI's callback functions. fore modetails, see eg/dbi-callback.pl.

# AUTHOR

Tokuhiro Matsuno <tokuhirom AAJKLFJEF GMAIL COM>

# SEE ALSO

# LICENSE

Copyright (C) Tokuhiro Matsuno

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.